<?php
/**
 * This file is automatic generated by build_docs.php file
 * and is used only for autocomplete in multiple IDE
 * don't modify manually.
 */

namespace danog\MadelineProto\Namespace;

interface Messages
{
    /**
     * Returns the current user dialog list.
     *
     * @param int $offset_date [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param array $offset_peer [Offset peer for pagination](https://core.telegram.org/api/offsets) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $limit Number of list elements to be returned
     * @param array $exclude_pinned Exclude pinned dialogs @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $folder_id [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders)
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getDialogs(int $offset_date, int $offset_id, array $offset_peer, int $limit, array $exclude_pinned = [], int $folder_id = 0, array $hash = []);

    /**
     * Returns found messages
     *
     * @param array $peer User or chat, histories with which are searched, or [(inputPeerEmpty)](https://docs.madelineproto.xyz/API_docs/constructors/inputPeerEmpty.html) constructor for global search @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $q Text search request
     * @param array $filter Filter to return only specified message types @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $min_date If a positive value was transferred, only messages with a sending date bigger than the transferred one will be returned
     * @param int $max_date If a positive value was transferred, only messages with a sending date smaller than the transferred one will be returned
     * @param int $offset_id Only return messages starting from the specified message ID
     * @param int $add_offset [Additional offset](https://core.telegram.org/api/offsets)
     * @param int $limit [Number of results to return](https://core.telegram.org/api/offsets)
     * @param int $max_id [Maximum message ID to return](https://core.telegram.org/api/offsets)
     * @param int $min_id [Minimum message ID to return](https://core.telegram.org/api/offsets)
     * @param array $from_id Only return messages sent by the specified user ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $top_msg_id [Thread ID](https://core.telegram.org/api/threads)
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function search(array $peer, string $q, array $filter, int $min_date, int $max_date, int $offset_id, int $add_offset, int $limit, int $max_id, int $min_id, array $from_id = [], int $top_msg_id = 0, array $hash = []);

    /**
     * Marks message history as read.
     *
     * @param array $peer Target user or group @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $max_id If a positive value is passed, only messages with identifiers less or equal than the given one will be read
     * 
     *
     * @return array
     */
    public function readHistory(array $peer, int $max_id);

    /**
     * Deletes communication history.
     *
     * @param array $peer User or chat, communication history of which will be deleted @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $max_id Maximum ID of message to delete
     * @param array $just_clear Just clear history for the current user, without actually removing messages for every chat user @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $revoke Whether to delete the message history for all chat participants @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $min_date Delete all messages newer than this UNIX timestamp
     * @param int $max_date Delete all messages older than this UNIX timestamp
     * 
     *
     * @return array
     */
    public function deleteHistory(array $peer, int $max_id, array $just_clear = [], array $revoke = [], int $min_date = 0, int $max_date = 0);

    /**
     * Deletes messages by their identifiers.
     *
     * @param array $id Message ID list @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $revoke Whether to delete messages for all participants of the chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function deleteMessages(array $id, array $revoke = []);

    /**
     * Confirms receipt of messages by a client, cancels PUSH-notification sending.
     *
     * @param int $max_id Maximum message ID available in a client.
     * 
     *
     * @return array
     */
    public function receivedMessages(int $max_id);

    /**
     * Sends a current user typing event (see [SendMessageAction](https://docs.madelineproto.xyz/API_docs/types/SendMessageAction.html) for all event types) to a conversation partner or group.
     *
     * @param array $peer Target user or group @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $action Type of action @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $top_msg_id [Thread ID](https://core.telegram.org/api/threads)
     * 
     *
     * @return array
     */
    public function setTyping(array $peer, array $action, int $top_msg_id = 0);

    /**
     * Sends a message to a chat
     *
     * @param array $peer The destination where the message will be sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $message The message
     * @param array $no_webpage Set this flag to disable generation of the webpage preview @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $silent Send this message silently (no notifications for the receivers) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $background Send this message as background message @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $clear_draft Clear the draft field @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $noforwards Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) enabled @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $update_stickersets_order  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $reply_to_msg_id The message ID to which this message will reply to
     * @param int $top_msg_id 
     * @param array $reply_markup Reply markup for sending bot buttons @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $entities Message [entities](https://core.telegram.org/api/entities) for sending styled text @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $schedule_date Scheduled message date for [scheduled messages](https://core.telegram.org/api/scheduled-messages)
     * @param array $send_as Send this message as the specified peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendMessage(array $peer, string $message, array $no_webpage = [], array $silent = [], array $background = [], array $clear_draft = [], array $noforwards = [], array $update_stickersets_order = [], int $reply_to_msg_id = 0, int $top_msg_id = 0, array $reply_markup = [], array $entities = [], int $schedule_date = 0, array $send_as = []);

    /**
     * Send a media
     *
     * @param array $peer Destination @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $media Attached media @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $message Caption
     * @param array $silent Send message silently (no notification should be triggered) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $background Send message in background @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $clear_draft Clear the draft @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $noforwards Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) enabled @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $update_stickersets_order  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $reply_to_msg_id Message ID to which this message should reply to
     * @param int $top_msg_id 
     * @param array $reply_markup Reply markup for bot keyboards @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $entities Message [entities](https://core.telegram.org/api/entities) for styled text @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $schedule_date Scheduled message date for [scheduled messages](https://core.telegram.org/api/scheduled-messages)
     * @param array $send_as Send this message as the specified peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendMedia(array $peer, array $media, string $message, array $silent = [], array $background = [], array $clear_draft = [], array $noforwards = [], array $update_stickersets_order = [], int $reply_to_msg_id = 0, int $top_msg_id = 0, array $reply_markup = [], array $entities = [], int $schedule_date = 0, array $send_as = []);

    /**
     * Forwards messages by their IDs.
     *
     * @param array $from_peer Source of messages @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $id IDs of messages @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $to_peer Destination peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $silent Whether to send messages silently (no notification will be triggered on the destination clients) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $background Whether to send the message in background @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $with_my_score When forwarding games, whether to include your score in the game @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $drop_author Whether to forward messages without quoting the original author @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $drop_media_captions Whether to strip captions from media @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $noforwards Only for bots, disallows further re-forwarding and saving of the messages, even if the destination chat doesn't have [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) enabled @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $top_msg_id 
     * @param int $schedule_date Scheduled message date for scheduled messages
     * @param array $send_as Forward the messages as the specified peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function forwardMessages(array $from_peer, array $id, array $to_peer, array $silent = [], array $background = [], array $with_my_score = [], array $drop_author = [], array $drop_media_captions = [], array $noforwards = [], int $top_msg_id = 0, int $schedule_date = 0, array $send_as = []);

    /**
     * Report a new incoming chat for spam, if the [peer settings](https://docs.madelineproto.xyz/API_docs/constructors/peerSettings.html) of the chat allow us to do that
     *
     * @param array $peer Peer to report @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function reportSpam(array $peer);

    /**
     * Get peer settings
     *
     * @param array $peer The peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getPeerSettings(array $peer);

    /**
     * Report a message in a chat for violation of telegram's Terms of Service
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $id IDs of messages to report @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $reason Why are these messages being reported @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $message Comment for report moderation
     * 
     *
     * @return array
     */
    public function report(array $peer, array $id, array $reason, string $message);

    /**
     * Returns chat basic info on their IDs.
     *
     * @param array $id List of chat IDs @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getChats(array $id);

    /**
     * Changes chat name and sends a service message on it.
     *
     * @param array $chat_id  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $title New chat name, different from the old one
     * 
     *
     * @return array
     */
    public function editChatTitle(array $chat_id, string $title);

    /**
     * Changes chat photo and sends a service message on it
     *
     * @param array $chat_id  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $photo Photo to be set @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function editChatPhoto(array $chat_id, array $photo);

    /**
     * Adds a user to a chat and sends a service message on it.
     *
     * @param array $chat_id  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $user_id User ID to be added @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $fwd_limit Number of last messages to be forwarded
     * 
     *
     * @return array
     */
    public function addChatUser(array $chat_id, array $user_id, int $fwd_limit);

    /**
     * Deletes a user from a chat and sends a service message on it.
     *
     * @param array $chat_id  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $user_id User ID to be deleted @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $revoke_history Remove the entire chat history of the specified user in this chat. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function deleteChatUser(array $chat_id, array $user_id, array $revoke_history = []);

    /**
     * Creates a new chat.
     *
     * @param array $users List of user IDs to be invited @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $title Chat name
     * @param int $ttl_period 
     * 
     *
     * @return array
     */
    public function createChat(array $users, string $title, int $ttl_period = 0);

    /**
     * Send typing event by the current user to a secret chat.
     *
     * @param array $peer Secret chat ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $typing Typing.<br>**Possible values**:<br>[(boolTrue)](https://docs.madelineproto.xyz/API_docs/constructors/boolTrue.html), if the user started typing and more than **5 seconds** have passed since the last request<br>[(boolFalse)](https://docs.madelineproto.xyz/API_docs/constructors/boolFalse.html), if the user stopped typing
     * 
     *
     * @return array
     */
    public function setEncryptedTyping(array $peer, bool $typing);

    /**
     * Marks message history within a secret chat as read.
     *
     * @param array $peer Secret chat ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $max_date Maximum date value for received messages in history
     * 
     *
     * @return array
     */
    public function readEncryptedHistory(array $peer, int $max_date);

    /**
     * Sends a text message to a secret chat.
     *
     * @param array $peer Secret chat ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $message  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $silent Send encrypted message without a notification @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendEncrypted(array $peer, array $message, array $silent = []);

    /**
     * Sends a message with a file attachment to a secret chat
     *
     * @param array $peer Secret chat ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $message  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $file File attachment for the secret chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $silent Whether to send the file without triggering a notification @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendEncryptedFile(array $peer, array $message, array $file, array $silent = []);

    /**
     * Sends a service message to a secret chat.
     *
     * @param array $peer Secret chat ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $message  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendEncryptedService(array $peer, array $message);

    /**
     * Report a secret chat for spam
     *
     * @param array $peer The secret chat to report @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function reportEncryptedSpam(array $peer);

    /**
     * Notifies the sender about the recipient having listened a voice message or watched a video.
     *
     * @param array $id Message ID list @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function readMessageContents(array $id);

    /**
     * Get stickers by emoji
     *
     * @param string $emoticon The emoji
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getStickers(string $emoticon, array $hash = []);

    /**
     * Get all installed stickers
     *
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getAllStickers(array $hash = []);

    /**
     * Get preview of webpage
     *
     * @param string $message Message from which to extract the preview
     * @param array $entities [Message entities for styled text](https://core.telegram.org/api/entities) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getWebPagePreview(string $message, array $entities = []);

    /**
     * Export an invite link for a chat
     *
     * @param array $peer Chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $legacy_revoke_permanent Legacy flag, reproducing legacy behavior of this method: if set, revokes all previous links before creating a new one. Kept for bot API BC, should not be used by modern clients. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $request_needed Whether admin confirmation is required before admitting each separate user into the chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $expire_date Expiration date
     * @param int $usage_limit Maximum number of users that can join using this link
     * @param string $title Description of the invite link, visible only to administrators
     * 
     *
     * @return array
     */
    public function exportChatInvite(array $peer, array $legacy_revoke_permanent = [], array $request_needed = [], int $expire_date = 0, int $usage_limit = 0, string $title = '');

    /**
     * Check the validity of a chat invite link and get basic info about it
     *
     * @param string $hash Invite hash from [chat invite deep link »](https://core.telegram.org/api/links#chat-invite-links).
     * 
     *
     * @return array
     */
    public function checkChatInvite(string $hash);

    /**
     * Import a chat invite and join a private chat/supergroup/channel
     *
     * @param string $hash `hash` from a [chat invite deep link](https://core.telegram.org/api/links#chat-invite-links)
     * 
     *
     * @return array
     */
    public function importChatInvite(string $hash);

    /**
     * Get info about a stickerset
     *
     * @param array $stickerset Stickerset @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $hash 
     * 
     *
     * @return array
     */
    public function getStickerSet(array $stickerset, int $hash);

    /**
     * Install a stickerset
     *
     * @param array $stickerset Stickerset to install @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $archived Whether to archive stickerset
     * 
     *
     * @return array
     */
    public function installStickerSet(array $stickerset, bool $archived);

    /**
     * Uninstall a stickerset
     *
     * @param array $stickerset The stickerset to uninstall @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function uninstallStickerSet(array $stickerset);

    /**
     * Start a conversation with a bot using a [deep linking parameter](https://core.telegram.org/api/links#bot-links)
     *
     * @param array $bot The bot @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $peer The chat where to start the bot, can be the bot's private chat or a group @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $start_param [Deep linking parameter](https://core.telegram.org/api/links#bot-links)
     * 
     *
     * @return array
     */
    public function startBot(array $bot, array $peer, string $start_param);

    /**
     * Get and increase the view counter of a message sent or forwarded from a [channel](https://core.telegram.org/api/channel)
     *
     * @param array $peer Peer where the message was found @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $id ID of message @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $increment Whether to mark the message as viewed and increment the view counter
     * 
     *
     * @return array
     */
    public function getMessagesViews(array $peer, array $id, bool $increment);

    /**
     * Make a user admin in a [basic group](https://core.telegram.org/api/channel#basic-groups).
     *
     * @param array $chat_id  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $user_id The user to make admin @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $is_admin Whether to make them admin
     * 
     *
     * @return array
     */
    public function editChatAdmin(array $chat_id, array $user_id, bool $is_admin);

    /**
     * Turn a [basic group into a supergroup](https://core.telegram.org/api/channel#migration)
     *
     * @param array $chat_id  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function migrateChat(array $chat_id);

    /**
     * Search for messages and peers globally
     *
     * @param string $q Query
     * @param array $filter Global search filter @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $min_date If a positive value was specified, the method will return only messages with date bigger than min\_date
     * @param int $max_date If a positive value was transferred, the method will return only messages with date smaller than max\_date
     * @param int $offset_rate Initially 0, then set to the [`next_rate` parameter of messages.messagesSlice](https://docs.madelineproto.xyz/API_docs/constructors/messages.messagesSlice.html)
     * @param array $offset_peer [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $limit [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $folder_id [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders)
     * 
     *
     * @return array
     */
    public function searchGlobal(string $q, array $filter, int $min_date, int $max_date, int $offset_rate, array $offset_peer, int $offset_id, int $limit, int $folder_id = 0);

    /**
     * Reorder installed stickersets
     *
     * @param array $order New stickerset order by stickerset IDs @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $masks Reorder mask stickersets @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $emojis Reorder [custom emoji stickersets](https://core.telegram.org/api/custom-emoji) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function reorderStickerSets(array $order, array $masks = [], array $emojis = []);

    /**
     * Get a document by its SHA256 hash, mainly used for gifs
     *
     * @param string $sha256 SHA256 of file
     * @param int $size Size of the file in bytes
     * @param string $mime_type Mime type
     * 
     *
     * @return array
     */
    public function getDocumentByHash(string $sha256, int $size, string $mime_type);

    /**
     * Get saved GIFs
     *
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getSavedGifs(array $hash = []);

    /**
     * Add GIF to saved gifs list
     *
     * @param array $id GIF to save @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $unsave Whether to remove GIF from saved gifs list
     * 
     *
     * @return array
     */
    public function saveGif(array $id, bool $unsave);

    /**
     * Query an inline bot
     *
     * @param array $bot The bot to query @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $peer The currently opened chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $query The query
     * @param string $offset The offset within the results, will be passed directly as-is to the bot.
     * @param array $geo_point The geolocation, if requested @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getInlineBotResults(array $bot, array $peer, string $query, string $offset, array $geo_point = []);

    /**
     * Answer an inline query, for bots only
     *
     * @param int $query_id Unique identifier for the answered query
     * @param array $results Vector of results for the inline query @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $cache_time The maximum amount of time in seconds that the result of the inline query may be cached on the server. Defaults to 300.
     * @param array $gallery Set this flag if the results are composed of media files @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $private Set this flag if results may be cached on the server side only for the user that sent the query. By default, results may be returned to any user who sends the same query @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $next_offset Pass the offset that a client should send in the next query with the same text to receive more results. Pass an empty string if there are no more results or if you don't support pagination. Offset length can't exceed 64 bytes.
     * @param array $switch_pm If passed, clients will display a button with specified text that switches the user to a private chat with the bot and sends the bot a start message with a certain parameter. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function setInlineBotResults(int $query_id, array $results, int $cache_time, array $gallery = [], array $private = [], string $next_offset = '', array $switch_pm = []);

    /**
     * Send a result obtained using [messages.getInlineBotResults](https://docs.madelineproto.xyz/API_docs/methods/messages.getInlineBotResults.html).
     *
     * @param array $peer Destination @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $query_id Query ID from [messages.getInlineBotResults](https://docs.madelineproto.xyz/API_docs/methods/messages.getInlineBotResults.html)
     * @param string $id Result ID from [messages.getInlineBotResults](https://docs.madelineproto.xyz/API_docs/methods/messages.getInlineBotResults.html)
     * @param array $silent Whether to send the message silently (no notification will be triggered on the other client) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $background Whether to send the message in background @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $clear_draft Whether to clear the [draft](https://core.telegram.org/api/drafts) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $hide_via Whether to hide the `via @botname` in the resulting message (only for bot usernames encountered in the [config](https://docs.madelineproto.xyz/API_docs/constructors/config.html)) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $reply_to_msg_id ID of the message this message should reply to
     * @param int $top_msg_id 
     * @param int $schedule_date Scheduled message date for scheduled messages
     * @param array $send_as Send this message as the specified peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendInlineBotResult(array $peer, int $query_id, string $id, array $silent = [], array $background = [], array $clear_draft = [], array $hide_via = [], int $reply_to_msg_id = 0, int $top_msg_id = 0, int $schedule_date = 0, array $send_as = []);

    /**
     * Find out if a media message's caption can be edited
     *
     * @param array $peer Peer where the media was sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $id ID of message
     * 
     *
     * @return array
     */
    public function getMessageEditData(array $peer, int $id);

    /**
     * Edit message
     *
     * @param array $peer Where was the message sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $id ID of the message to edit
     * @param array $no_webpage Disable webpage preview @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $message New message
     * @param array $media New attached media @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $reply_markup Reply markup for inline keyboards @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $entities [Message entities for styled text](https://core.telegram.org/api/entities) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $schedule_date Scheduled message date for [scheduled messages](https://core.telegram.org/api/scheduled-messages)
     * 
     *
     * @return array
     */
    public function editMessage(array $peer, int $id, array $no_webpage = [], string $message = '', array $media = [], array $reply_markup = [], array $entities = [], int $schedule_date = 0);

    /**
     * Edit an inline bot message
     *
     * @param array $id Sent inline message ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $no_webpage Disable webpage preview @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $message Message
     * @param array $media Media @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $reply_markup Reply markup for inline keyboards @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $entities [Message entities for styled text](https://core.telegram.org/api/entities) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function editInlineBotMessage(array $id, array $no_webpage = [], string $message = '', array $media = [], array $reply_markup = [], array $entities = []);

    /**
     * Press an inline callback button and get a callback answer from the bot
     *
     * @param array $peer Where was the inline keyboard sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id ID of the Message with the inline keyboard
     * @param array $game Whether this is a "play game" button @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $data Callback data
     * @param array $password For buttons [requiring you to verify your identity with your 2FA password](https://docs.madelineproto.xyz/API_docs/constructors/keyboardButtonCallback.html), the SRP payload generated using [SRP](https://core.telegram.org/api/srp). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getBotCallbackAnswer(array $peer, int $msg_id, array $game = [], string $data = '', array $password = []);

    /**
     * Set the callback answer to a user button press (bots only)
     *
     * @param int $query_id Query ID
     * @param int $cache_time Cache validity
     * @param array $alert Whether to show the message as a popup instead of a toast notification @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $message Popup to show
     * @param string $url URL to open
     * 
     *
     * @return array
     */
    public function setBotCallbackAnswer(int $query_id, int $cache_time, array $alert = [], string $message = '', string $url = '');

    /**
     * Get dialog info of specified peers
     *
     * @param array $peers Peers @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getPeerDialogs(array $peers);

    /**
     * Save a message [draft](https://core.telegram.org/api/drafts) associated to a chat.
     *
     * @param array $peer Destination of the message that should be sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $message The draft
     * @param array $no_webpage Disable generation of the webpage preview @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $reply_to_msg_id Message ID the message should reply to
     * @param int $top_msg_id 
     * @param array $entities Message [entities](https://core.telegram.org/api/entities) for styled text @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function saveDraft(array $peer, string $message, array $no_webpage = [], int $reply_to_msg_id = 0, int $top_msg_id = 0, array $entities = []);

    /**
     * Return all message [drafts](https://core.telegram.org/api/drafts).  
     * Returns all the latest [updateDraftMessage](https://docs.madelineproto.xyz/API_docs/constructors/updateDraftMessage.html) updates related to all chats with drafts.
     *
     * @return array
     */
    public function getAllDrafts();

    /**
     * Get featured stickers
     *
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getFeaturedStickers(array $hash = []);

    /**
     * Mark new featured stickers as read
     *
     * @param array $id IDs of stickersets to mark as read @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function readFeaturedStickers(array $id);

    /**
     * Get recent stickers
     *
     * @param array $attached Get stickers recently attached to photo or video files @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getRecentStickers(array $attached = [], array $hash = []);

    /**
     * Add/remove sticker from recent stickers list
     *
     * @param array $id Sticker @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $unsave Whether to save or unsave the sticker
     * @param array $attached Whether to add/remove stickers recently attached to photo or video files @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function saveRecentSticker(array $id, bool $unsave, array $attached = []);

    /**
     * Clear recent stickers
     *
     * @param array $attached Set this flag to clear the list of stickers recently attached to photo or video files @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function clearRecentStickers(array $attached = []);

    /**
     * Get all archived stickers
     *
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param array $masks Get [mask stickers](https://core.telegram.org/api/stickers#mask-stickers) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $emojis Get [custom emoji stickers](https://core.telegram.org/api/custom-emoji) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getArchivedStickers(int $offset_id, int $limit, array $masks = [], array $emojis = []);

    /**
     * Get installed mask stickers
     *
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getMaskStickers(array $hash = []);

    /**
     * Get stickers attached to a photo or video
     *
     * @param array $media Stickered media @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getAttachedStickers(array $media);

    /**
     * Use this method to set the score of the specified user in a game sent as a normal message (bots only).
     *
     * @param array $peer Unique identifier of target chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $id Identifier of the sent message
     * @param array $user_id User identifier @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $score New score
     * @param array $edit_message Set this flag if the game message should be automatically edited to include the current scoreboard @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $force Set this flag if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function setGameScore(array $peer, int $id, array $user_id, int $score, array $edit_message = [], array $force = []);

    /**
     * Use this method to set the score of the specified user in a game sent as an inline message (bots only).
     *
     * @param array $id ID of the inline message @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $user_id User identifier @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $score New score
     * @param array $edit_message Set this flag if the game message should be automatically edited to include the current scoreboard @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $force Set this flag if the high score is allowed to decrease. This can be useful when fixing mistakes or banning cheaters @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function setInlineGameScore(array $id, array $user_id, int $score, array $edit_message = [], array $force = []);

    /**
     * Get highscores of a game
     *
     * @param array $peer Where was the game sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $id ID of message with game media attachment
     * @param array $user_id Get high scores made by a certain user @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getGameHighScores(array $peer, int $id, array $user_id);

    /**
     * Get highscores of a game sent using an inline bot
     *
     * @param array $id ID of inline message @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $user_id Get high scores of a certain user @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getInlineGameHighScores(array $id, array $user_id);

    /**
     * Get chats in common with a user
     *
     * @param array $user_id User ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $max_id Maximum ID of chat to return (see [pagination](https://core.telegram.org/api/offsets))
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * 
     *
     * @return array
     */
    public function getCommonChats(array $user_id, int $max_id, int $limit);

    /**
     * Get all chats, channels and supergroups
     *
     * @param array $except_ids Except these chats/channels/supergroups @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getAllChats(array $except_ids);

    /**
     * Get [instant view](https://instantview.telegram.org) page
     *
     * @param string $url URL of IV page to fetch
     * @param int $hash 
     * 
     *
     * @return array
     */
    public function getWebPage(string $url, int $hash);

    /**
     * Pin/unpin a dialog
     *
     * @param array $peer The dialog to pin @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $pinned Whether to pin or unpin the dialog @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function toggleDialogPin(array $peer, array $pinned = []);

    /**
     * Reorder pinned dialogs
     *
     * @param int $folder_id [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders)
     * @param array $order New dialog order @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $force If set, dialogs pinned server-side but not present in the `order` field will be unpinned. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function reorderPinnedDialogs(int $folder_id, array $order, array $force = []);

    /**
     * Get pinned dialogs
     *
     * @param int $folder_id [Peer folder ID, for more info click here](https://core.telegram.org/api/folders#peer-folders)
     * 
     *
     * @return array
     */
    public function getPinnedDialogs(int $folder_id);

    /**
     * If you sent an invoice requesting a shipping address and the parameter is\_flexible was specified, the bot will receive an [updateBotShippingQuery](https://docs.madelineproto.xyz/API_docs/constructors/updateBotShippingQuery.html) update. Use this method to reply to shipping queries.
     *
     * @param int $query_id Unique identifier for the query to be answered
     * @param string $error Error message in human readable form that explains why it is impossible to complete the order (e.g. "Sorry, delivery to your desired address is unavailable"). Telegram will display this message to the user.
     * @param array $shipping_options A vector of available shipping options. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function setBotShippingResults(int $query_id, string $error = '', array $shipping_options = []);

    /**
     * Once the user has confirmed their payment and shipping details, the bot receives an [updateBotPrecheckoutQuery](https://docs.madelineproto.xyz/API_docs/constructors/updateBotPrecheckoutQuery.html) update.  
     * Use this method to respond to such pre-checkout queries.  
     * **Note**: Telegram must receive an answer within 10 seconds after the pre-checkout query was sent.
     *
     * @param int $query_id Unique identifier for the query to be answered
     * @param array $success Set this flag if everything is alright (goods are available, etc.) and the bot is ready to proceed with the order, otherwise do not set it, and set the `error` field, instead @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $error Required if the `success` isn't set. Error message in human readable form that explains the reason for failure to proceed with the checkout (e.g. "Sorry, somebody just bought the last of our amazing black T-shirts while you were busy filling out your payment details. Please choose a different color or garment!"). Telegram will display this message to the user.
     * 
     *
     * @return array
     */
    public function setBotPrecheckoutResults(int $query_id, array $success = [], string $error = '');

    /**
     * Upload a file and associate it to a chat (without actually sending it to the chat)
     *
     * @param array $peer The chat, can be [inputPeerEmpty](https://docs.madelineproto.xyz/API_docs/constructors/inputPeerEmpty.html) for bots and [inputPeerSelf](https://docs.madelineproto.xyz/API_docs/constructors/inputPeerSelf.html) for users. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $media File uploaded in chunks as described in [files »](https://core.telegram.org/api/files) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function uploadMedia(array $peer, array $media);

    /**
     * Notify the other user in a private chat that a screenshot of the chat was taken
     *
     * @param array $peer Other user @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $reply_to_msg_id ID of message that was screenshotted, can be 0
     * 
     *
     * @return array
     */
    public function sendScreenshotNotification(array $peer, int $reply_to_msg_id);

    /**
     * Get faved stickers
     *
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getFavedStickers(array $hash = []);

    /**
     * Mark or unmark a sticker as favorite
     *
     * @param array $id Sticker in question @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $unfave Whether to add or remove a sticker from favorites
     * 
     *
     * @return array
     */
    public function faveSticker(array $id, bool $unfave);

    /**
     * Get unread messages where we were mentioned
     *
     * @param array $peer Peer where to look for mentions @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $add_offset [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param int $max_id Maximum message ID to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param int $min_id Minimum message ID to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param int $top_msg_id 
     * 
     *
     * @return array
     */
    public function getUnreadMentions(array $peer, int $offset_id, int $add_offset, int $limit, int $max_id, int $min_id, int $top_msg_id = 0);

    /**
     * Mark mentions as read
     *
     * @param array $peer Dialog @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $top_msg_id 
     * 
     *
     * @return array
     */
    public function readMentions(array $peer, int $top_msg_id = 0);

    /**
     * Get live location history of a certain user
     *
     * @param array $peer User @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getRecentLocations(array $peer, int $limit, array $hash = []);

    /**
     * Send an [album or grouped media](https://core.telegram.org/api/files#albums-grouped-media)
     *
     * @param array $peer The destination chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $multi_media The medias to send @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $silent Whether to send the album silently (no notification triggered) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $background Send in background? @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $clear_draft Whether to clear [drafts](https://core.telegram.org/api/drafts) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $noforwards Only for bots, disallows forwarding and saving of the messages, even if the destination chat doesn't have [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) enabled @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $update_stickersets_order  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $reply_to_msg_id The message to reply to
     * @param int $top_msg_id 
     * @param int $schedule_date Scheduled message date for scheduled messages
     * @param array $send_as Send this message as the specified peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendMultiMedia(array $peer, array $multi_media, array $silent = [], array $background = [], array $clear_draft = [], array $noforwards = [], array $update_stickersets_order = [], int $reply_to_msg_id = 0, int $top_msg_id = 0, int $schedule_date = 0, array $send_as = []);

    /**
     * Upload encrypted file and associate it to a secret chat
     *
     * @param array $peer The secret chat to associate the file to @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $file The file @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function uploadEncryptedFile(array $peer, array $file);

    /**
     * Search for stickersets
     *
     * @param string $q Query string
     * @param array $exclude_featured Exclude featured stickersets from results @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function searchStickerSets(string $q, array $exclude_featured = [], array $hash = []);

    /**
     * Get message ranges for saving the user's chat history
     *
     * @return array
     */
    public function getSplitRanges();

    /**
     * Manually mark dialog as unread
     *
     * @param array $peer Dialog @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $unread Mark as unread/read @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function markDialogUnread(array $peer, array $unread = []);

    /**
     * Get dialogs manually marked as unread
     *
     * @return array
     */
    public function getDialogUnreadMarks();

    /**
     * Clear all [drafts](https://core.telegram.org/api/drafts).
     *
     * @return array
     */
    public function clearAllDrafts();

    /**
     * Pin a message
     *
     * @param array $peer The peer where to pin the message @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $id The message to pin or unpin
     * @param array $silent Pin the message silently, without triggering a notification @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $unpin Whether the message should unpinned or pinned @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $pm_oneside Whether the message should only be pinned on the local side of a one-to-one chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function updatePinnedMessage(array $peer, int $id, array $silent = [], array $unpin = [], array $pm_oneside = []);

    /**
     * Vote in a [poll](https://docs.madelineproto.xyz/API_docs/constructors/poll.html)
     *
     * @param array $peer The chat where the poll was sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id The message ID of the poll
     * @param array $options The options that were chosen @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendVote(array $peer, int $msg_id, array $options);

    /**
     * Get poll results
     *
     * @param array $peer Peer where the poll was found @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id Message ID of poll message
     * 
     *
     * @return array
     */
    public function getPollResults(array $peer, int $msg_id);

    /**
     * Get count of online users in a chat
     *
     * @param array $peer The chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getOnlines(array $peer);

    /**
     * Edit the description of a [group/supergroup/channel](https://core.telegram.org/api/channel).
     *
     * @param array $peer The [group/supergroup/channel](https://core.telegram.org/api/channel). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $about The new description
     * 
     *
     * @return array
     */
    public function editChatAbout(array $peer, string $about);

    /**
     * Edit the default banned rights of a [channel/supergroup/group](https://core.telegram.org/api/channel).
     *
     * @param array $peer The peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $banned_rights The new global rights @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function editChatDefaultBannedRights(array $peer, array $banned_rights);

    /**
     * Get localized emoji keywords
     *
     * @param string $lang_code Language code
     * 
     *
     * @return array
     */
    public function getEmojiKeywords(string $lang_code);

    /**
     * Get changed emoji keywords
     *
     * @param string $lang_code Language code
     * @param int $from_version Previous emoji keyword localization version
     * 
     *
     * @return array
     */
    public function getEmojiKeywordsDifference(string $lang_code, int $from_version);

    /**
     * Get info about an emoji keyword localization
     *
     * @param array $lang_codes Language codes @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getEmojiKeywordsLanguages(array $lang_codes);

    /**
     * Returns an HTTP URL which can be used to automatically log in into translation platform and suggest new emoji replacements. The URL will be valid for 30 seconds after generation
     *
     * @param string $lang_code Language code for which the emoji replacements will be suggested
     * 
     *
     * @return array
     */
    public function getEmojiURL(string $lang_code);

    /**
     * Get the number of results that would be found by a [messages.search](https://docs.madelineproto.xyz/API_docs/methods/messages.search.html) call with the same parameters
     *
     * @param array $peer Peer where to search @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $filters Search filters @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $top_msg_id 
     * 
     *
     * @return array
     */
    public function getSearchCounters(array $peer, array $filters, int $top_msg_id = 0);

    /**
     * Get more info about a Seamless Telegram Login authorization request, for more info [click here »](https://core.telegram.org/api/url-authorization)
     *
     * @param array $peer Peer where the message is located @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id The message
     * @param int $button_id The ID of the button with the authorization request
     * @param string $url URL used for [link URL authorization, click here for more info »](https://core.telegram.org/api/url-authorization#link-url-authorization)
     * 
     *
     * @return array
     */
    public function requestUrlAuth(array $peer = [], int $msg_id = 0, int $button_id = 0, string $url = '');

    /**
     * Use this to accept a Seamless Telegram Login authorization request, for more info [click here »](https://core.telegram.org/api/url-authorization)
     *
     * @param array $write_allowed Set this flag to allow the bot to send messages to you (if requested) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $peer The location of the message @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id Message ID of the message with the login button
     * @param int $button_id ID of the login button
     * @param string $url URL used for [link URL authorization, click here for more info »](https://core.telegram.org/api/url-authorization#link-url-authorization)
     * 
     *
     * @return array
     */
    public function acceptUrlAuth(array $write_allowed = [], array $peer = [], int $msg_id = 0, int $button_id = 0, string $url = '');

    /**
     * Should be called after the user hides the report spam/add as contact bar of a new chat, effectively prevents the user from executing the actions specified in the [peer's settings](https://docs.madelineproto.xyz/API_docs/constructors/peerSettings.html).
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function hidePeerSettingsBar(array $peer);

    /**
     * Get scheduled messages
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getScheduledHistory(array $peer, array $hash = []);

    /**
     * Get scheduled messages
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $id IDs of scheduled messages @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getScheduledMessages(array $peer, array $id);

    /**
     * Send scheduled messages right away
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $id Scheduled message IDs @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendScheduledMessages(array $peer, array $id);

    /**
     * Delete scheduled messages
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $id Scheduled message IDs @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function deleteScheduledMessages(array $peer, array $id);

    /**
     * Get poll results for non-anonymous polls
     *
     * @param array $peer Chat where the poll was sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $id Message ID
     * @param int $limit Number of results to return
     * @param string $option Get only results for the specified poll `option`
     * @param string $offset Offset for results, taken from the `next_offset` field of [messages.votesList](https://docs.madelineproto.xyz/API_docs/constructors/messages.votesList.html), initially an empty string. <br>Note: if no more results are available, the method call will return an empty `next_offset`; thus, avoid providing the `next_offset` returned in [messages.votesList](https://docs.madelineproto.xyz/API_docs/constructors/messages.votesList.html) if it is empty, to avoid an infinite loop.
     * 
     *
     * @return array
     */
    public function getPollVotes(array $peer, int $id, int $limit, string $option = '', string $offset = '');

    /**
     * Apply changes to multiple stickersets
     *
     * @param array $stickersets Stickersets to act upon @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $uninstall Uninstall the specified stickersets @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $archive Archive the specified stickersets @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $unarchive Unarchive the specified stickersets @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function toggleStickerSets(array $stickersets, array $uninstall = [], array $archive = [], array $unarchive = []);

    /**
     * Get [folders](https://core.telegram.org/api/folders)
     *
     * @return array
     */
    public function getDialogFilters();

    /**
     * Get [suggested folders](https://core.telegram.org/api/folders)
     *
     * @return array
     */
    public function getSuggestedDialogFilters();

    /**
     * Update [folder](https://core.telegram.org/api/folders)
     *
     * @param int $id [Folder](https://core.telegram.org/api/folders) ID
     * @param array $filter [Folder](https://core.telegram.org/api/folders) info @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function updateDialogFilter(int $id, array $filter = []);

    /**
     * Reorder [folders](https://core.telegram.org/api/folders)
     *
     * @param array $order New [folder](https://core.telegram.org/api/folders) order @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function updateDialogFiltersOrder(array $order);

    /**
     * Method for fetching previously featured stickers
     *
     * @param int $offset Offset
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getOldFeaturedStickers(int $offset, int $limit, array $hash = []);

    /**
     * Get messages in a reply thread
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id Message ID
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $offset_date [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $add_offset [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param int $max_id If a positive value was transferred, the method will return only messages with ID smaller than max\_id
     * @param int $min_id If a positive value was transferred, the method will return only messages with ID bigger than min\_id
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getReplies(array $peer, int $msg_id, int $offset_id, int $offset_date, int $add_offset, int $limit, int $max_id, int $min_id, array $hash = []);

    /**
     * Get [discussion message](https://core.telegram.org/api/threads) from the [associated discussion group](https://core.telegram.org/api/discussion) of a channel to show it on top of the comment section, without actually joining the group
     *
     * @param array $peer [Channel ID](https://core.telegram.org/api/channel) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id Message ID
     * 
     *
     * @return array
     */
    public function getDiscussionMessage(array $peer, int $msg_id);

    /**
     * Mark a [thread](https://core.telegram.org/api/threads) as read
     *
     * @param array $peer Group ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id ID of message that started the thread
     * @param int $read_max_id ID up to which thread messages were read
     * 
     *
     * @return array
     */
    public function readDiscussion(array $peer, int $msg_id, int $read_max_id);

    /**
     * [Unpin](https://core.telegram.org/api/pin) all pinned messages
     *
     * @param array $peer Chat where to unpin @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $top_msg_id 
     * 
     *
     * @return array
     */
    public function unpinAllMessages(array $peer, int $top_msg_id = 0);

    /**
     * Delete a [chat](https://core.telegram.org/api/channel)
     *
     * @param array $chat_id  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function deleteChat(array $chat_id);

    /**
     * Delete the entire phone call history.
     *
     * @param array $revoke Whether to remove phone call history for participants as well @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function deletePhoneCallHistory(array $revoke = []);

    /**
     * Obtains information about a chat export file, generated by a foreign chat app, [click here for more info about imported chats »](https://core.telegram.org/api/import).
     *
     * @param string $import_head Beginning of the message file; up to 100 lines.
     * 
     *
     * @return array
     */
    public function checkHistoryImport(string $import_head);

    /**
     * Import chat history from a foreign chat app into a specific Telegram chat, [click here for more info about imported chats »](https://core.telegram.org/api/import).
     *
     * @param array $peer The Telegram chat where the [history should be imported](https://core.telegram.org/api/import). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $file File with messages to import. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $media_count Number of media files associated with the chat that will be uploaded using [messages.uploadImportedMedia](https://docs.madelineproto.xyz/API_docs/methods/messages.uploadImportedMedia.html).
     * 
     *
     * @return array
     */
    public function initHistoryImport(array $peer, array $file, int $media_count);

    /**
     * Upload a media file associated with an [imported chat, click here for more info »](https://core.telegram.org/api/import).
     *
     * @param array $peer The Telegram chat where the media will be imported @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $import_id Identifier of a [history import session](https://core.telegram.org/api/import), returned by [messages.initHistoryImport](https://docs.madelineproto.xyz/API_docs/methods/messages.initHistoryImport.html)
     * @param string $file_name File name
     * @param array $media Media metadata @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function uploadImportedMedia(array $peer, int $import_id, string $file_name, array $media);

    /**
     * Complete the [history import process](https://core.telegram.org/api/import), importing all messages into the chat.  
     * To be called only after initializing the import with [messages.initHistoryImport](https://docs.madelineproto.xyz/API_docs/methods/messages.initHistoryImport.html) and uploading all files using [messages.uploadImportedMedia](https://docs.madelineproto.xyz/API_docs/methods/messages.uploadImportedMedia.html).
     *
     * @param array $peer The Telegram chat where the messages should be [imported, click here for more info »](https://core.telegram.org/api/import) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $import_id Identifier of a history import session, returned by [messages.initHistoryImport](https://docs.madelineproto.xyz/API_docs/methods/messages.initHistoryImport.html).
     * 
     *
     * @return array
     */
    public function startHistoryImport(array $peer, int $import_id);

    /**
     * Get info about the chat invites of a specific chat
     *
     * @param array $peer Chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $admin_id Whether to only fetch chat invites from this admin @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param array $revoked Whether to fetch revoked chat invites @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $offset_date [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param string $offset_link [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * 
     *
     * @return array
     */
    public function getExportedChatInvites(array $peer, array $admin_id, int $limit, array $revoked = [], int $offset_date = 0, string $offset_link = '');

    /**
     * Get info about a chat invite
     *
     * @param array $peer Chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $link Invite link
     * 
     *
     * @return array
     */
    public function getExportedChatInvite(array $peer, string $link);

    /**
     * Edit an exported chat invite
     *
     * @param array $peer Chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $link Invite link
     * @param array $revoked Whether to revoke the chat invite @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $expire_date New expiration date
     * @param int $usage_limit Maximum number of users that can join using this link
     * @param bool $request_needed Whether admin confirmation is required before admitting each separate user into the chat
     * @param string $title Description of the invite link, visible only to administrators
     * 
     *
     * @return array
     */
    public function editExportedChatInvite(array $peer, string $link, array $revoked = [], int $expire_date = 0, int $usage_limit = 0, bool $request_needed = false, string $title = '');

    /**
     * Delete all revoked chat invites
     *
     * @param array $peer Chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $admin_id ID of the admin that originally generated the revoked chat invites @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function deleteRevokedExportedChatInvites(array $peer, array $admin_id);

    /**
     * Delete a chat invite
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $link Invite link
     * 
     *
     * @return array
     */
    public function deleteExportedChatInvite(array $peer, string $link);

    /**
     * Get info about chat invites generated by admins.
     *
     * @param array $peer Chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getAdminsWithInvites(array $peer);

    /**
     * Get info about the users that joined the chat using a specific chat invite
     *
     * @param array $peer Chat @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $offset_date [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param array $offset_user User ID for [pagination](https://core.telegram.org/api/offsets) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param array $requested If set, only returns info about users with pending [join requests »](https://core.telegram.org/api/invites#join-requests) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $link Invite link
     * @param string $q Search for a user in the pending [join requests »](https://core.telegram.org/api/invites#join-requests) list: only available when the `requested` flag is set, cannot be used together with a specific `link`.
     * 
     *
     * @return array
     */
    public function getChatInviteImporters(array $peer, int $offset_date, array $offset_user, int $limit, array $requested = [], string $link = '', string $q = '');

    /**
     * Set maximum Time-To-Live of all messages in the specified chat
     *
     * @param array $peer The dialog @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $period Automatically delete all messages sent in the chat after this many seconds
     * 
     *
     * @return array
     */
    public function setHistoryTTL(array $peer, int $period);

    /**
     * Check whether chat history exported from another chat app can be [imported into a specific Telegram chat, click here for more info »](https://core.telegram.org/api/import).
     * 
     * If the check succeeds, and no RPC errors are returned, a [messages.CheckedHistoryImportPeer](https://docs.madelineproto.xyz/API_docs/types/messages.CheckedHistoryImportPeer.html) constructor will be returned, with a confirmation text to be shown to the user, before actually initializing the import.
     *
     * @param array $peer The chat where we want to [import history »](https://core.telegram.org/api/import). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function checkHistoryImportPeer(array $peer);

    /**
     * Change the chat theme of a certain chat
     *
     * @param array $peer Private chat where to change theme @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $emoticon Emoji, identifying a specific chat theme; a list of chat themes can be fetched using [account.getChatThemes](https://docs.madelineproto.xyz/API_docs/methods/account.getChatThemes.html)
     * 
     *
     * @return array
     */
    public function setChatTheme(array $peer, string $emoticon);

    /**
     * Get which users read a specific message: only available for groups and supergroups with less than [`chat_read_mark_size_threshold` members](https://core.telegram.org/api/config#chat-read-mark-size-threshold), read receipts will be stored for [`chat_read_mark_expire_period` seconds after the message was sent](https://core.telegram.org/api/config#chat-read-mark-expire-period), see [client configuration for more info »](https://core.telegram.org/api/config#client-configuration).
     *
     * @param array $peer Dialog @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id Message ID
     * 
     *
     * @return array
     */
    public function getMessageReadParticipants(array $peer, int $msg_id);

    /**
     * Returns information about the next messages of the specified type in the chat split by days.
     * 
     * Returns the results in reverse chronological order.  
     * Can return partial results for the last returned day.
     *
     * @param array $peer Peer where to search @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $filter Message filter, [inputMessagesFilterEmpty](https://docs.madelineproto.xyz/API_docs/constructors/inputMessagesFilterEmpty.html), [inputMessagesFilterMyMentions](https://docs.madelineproto.xyz/API_docs/constructors/inputMessagesFilterMyMentions.html) filters are not supported by this method. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $offset_date [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * 
     *
     * @return array
     */
    public function getSearchResultsCalendar(array $peer, array $filter, int $offset_id, int $offset_date);

    /**
     * Returns sparse positions of messages of the specified type in the chat to be used for shared media scroll implementation.
     * 
     * Returns the results in reverse chronological order (i.e., in order of decreasing message\_id).
     *
     * @param array $peer Peer where to search @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $filter Message filter, [inputMessagesFilterEmpty](https://docs.madelineproto.xyz/API_docs/constructors/inputMessagesFilterEmpty.html), [inputMessagesFilterMyMentions](https://docs.madelineproto.xyz/API_docs/constructors/inputMessagesFilterMyMentions.html) filters are not supported by this method. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * 
     *
     * @return array
     */
    public function getSearchResultsPositions(array $peer, array $filter, int $offset_id, int $limit);

    /**
     * Dismiss or approve a chat [join request](https://core.telegram.org/api/invites#join-requests) related to a specific chat or channel.
     *
     * @param array $peer The chat or channel @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $user_id The user whose [join request »](https://core.telegram.org/api/invites#join-requests) should be dismissed or approved @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $approved Whether to dismiss or approve the chat [join request »](https://core.telegram.org/api/invites#join-requests) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function hideChatJoinRequest(array $peer, array $user_id, array $approved = []);

    /**
     * Dismiss or approve all [join requests](https://core.telegram.org/api/invites#join-requests) related to a specific chat or channel.
     *
     * @param array $peer The chat or channel @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $approved Whether to dismiss or approve all chat [join requests »](https://core.telegram.org/api/invites#join-requests) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $link Only dismiss or approve [join requests »](https://core.telegram.org/api/invites#join-requests) initiated using this invite link
     * 
     *
     * @return array
     */
    public function hideAllChatJoinRequests(array $peer, array $approved = [], string $link = '');

    /**
     * Enable or disable [content protection](https://telegram.org/blog/protected-content-delete-by-date-and-more) on a channel or chat
     *
     * @param array $peer The chat or channel @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $enabled Enable or disable content protection
     * 
     *
     * @return array
     */
    public function toggleNoForwards(array $peer, bool $enabled);

    /**
     * Change the default peer that should be used when sending messages to a specific group
     *
     * @param array $peer Group @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $send_as The default peer that should be used when sending messages to the group @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function saveDefaultSendAs(array $peer, array $send_as);

    /**
     * React to message
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id Message ID to react to
     * @param array $big Whether a bigger and longer reaction should be shown @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $add_to_recent  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $reaction  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendReaction(array $peer, int $msg_id, array $big = [], array $add_to_recent = [], array $reaction = []);

    /**
     * Get [message reactions »](https://core.telegram.org/api/reactions)
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $id Message IDs @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getMessagesReactions(array $peer, array $id);

    /**
     * Get [message reaction](https://core.telegram.org/api/reactions) list, along with the sender of each reaction.
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $id Message ID
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param array $reaction  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $offset Offset (typically taken from the `next_offset` field of the returned [messages.MessageReactionsList](https://docs.madelineproto.xyz/API_docs/types/messages.MessageReactionsList.html))
     * 
     *
     * @return array
     */
    public function getMessageReactionsList(array $peer, int $id, int $limit, array $reaction = [], string $offset = '');

    /**
     * Change the set of [message reactions »](https://core.telegram.org/api/reactions) that can be used in a certain group, supergroup or channel
     *
     * @param array $peer Group where to apply changes @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $available_reactions  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function setChatAvailableReactions(array $peer, array $available_reactions);

    /**
     * Obtain available [message reactions »](https://core.telegram.org/api/reactions)
     *
     * @param int $hash 
     * 
     *
     * @return array
     */
    public function getAvailableReactions(int $hash);

    /**
     * Change default emoji reaction to use in the quick reaction menu: the value is synced across devices and can be fetched using [help.getConfig, `reactions_default` field](https://docs.madelineproto.xyz/API_docs/methods/help.getConfig.html).
     *
     * @param array $reaction  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function setDefaultReaction(array $reaction);

    /**
     * Translate a given text
     *
     * @param string $to_lang Two-letter ISO 639-1 language code of the language to which the message is translated
     * @param array $peer If the text is a chat message, the peer ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id If the text is a chat message, the message ID
     * @param string $text The text to translate
     * @param string $from_lang Two-letter ISO 639-1 language code of the language from which the message is translated, if not set will be autodetected
     * 
     *
     * @return array
     */
    public function translateText(string $to_lang, array $peer = [], int $msg_id = 0, string $text = '', string $from_lang = '');

    /**
     * Get unread reactions to messages you sent
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $offset_id [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $add_offset [Offsets for pagination, for more info click here](https://core.telegram.org/api/offsets)
     * @param int $limit Maximum number of results to return, [see pagination](https://core.telegram.org/api/offsets)
     * @param int $max_id Only return reactions for messages up until this message ID
     * @param int $min_id Only return reactions for messages starting from this message ID
     * @param int $top_msg_id 
     * 
     *
     * @return array
     */
    public function getUnreadReactions(array $peer, int $offset_id, int $add_offset, int $limit, int $max_id, int $min_id, int $top_msg_id = 0);

    /**
     * Mark [message reactions »](https://core.telegram.org/api/reactions) as read
     *
     * @param array $peer Peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $top_msg_id 
     * 
     *
     * @return array
     */
    public function readReactions(array $peer, int $top_msg_id = 0);

    /**
     * View and search recently sent media.  
     * This method does not support pagination.
     *
     * @param string $q Optional search query
     * @param array $filter Message filter @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $limit Maximum number of results to return (max 100).
     * 
     *
     * @return array
     */
    public function searchSentMedia(string $q, array $filter, int $limit);

    /**
     * Returns installed attachment menu [bot web apps »](https://core.telegram.org/api/bots/attach)
     *
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getAttachMenuBots(array $hash = []);

    /**
     * Returns attachment menu entry for a [bot web app that can be launched from the attachment menu »](https://core.telegram.org/api/bots/attach)
     *
     * @param array $bot Bot ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getAttachMenuBot(array $bot);

    /**
     * Enable or disable [web bot attachment menu »](https://core.telegram.org/api/bots/attach)
     *
     * @param array $bot Bot ID @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param bool $enabled Toggle
     * @param array $write_allowed  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function toggleBotInAttachMenu(array $bot, bool $enabled, array $write_allowed = []);

    /**
     * Open a [bot web app](https://core.telegram.org/bots/webapps), sending over user information after user confirmation.
     * 
     * After calling this method, until the user closes the webview, [messages.prolongWebView](https://docs.madelineproto.xyz/API_docs/methods/messages.prolongWebView.html) must be called every 60 seconds.
     *
     * @param array $peer Dialog where the web app is being opened, and where the resulting message will be sent (see the [docs for more info »](https://core.telegram.org/api/bots/webapps)). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $bot Bot that owns the [web app](https://core.telegram.org/api/bots/webapps) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $platform 
     * @param array $from_bot_menu Whether the webview was opened by clicking on the bot's [menu button »](https://core.telegram.org/api/bots/menu). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $silent Whether the inline message that will be sent by the bot on behalf of the user once the web app interaction is [terminated](https://docs.madelineproto.xyz/API_docs/methods/messages.sendWebViewResultMessage.html) should be sent silently (no notifications for the receivers). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $url [Web app URL](https://core.telegram.org/api/bots/webapps)
     * @param string $start_param If the web app was opened from the attachment menu using a [attachment menu deep link](https://core.telegram.org/api/links#bot-attachment-menu-links), `start_param` should contain the `data` from the `startattach` parameter.
     * @param array $theme_params Theme parameters for the web app @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $reply_to_msg_id Whether the inline message that will be sent by the bot on behalf of the user once the web app interaction is [terminated](https://docs.madelineproto.xyz/API_docs/methods/messages.sendWebViewResultMessage.html) should be sent in reply to this message ID.
     * @param int $top_msg_id 
     * @param array $send_as Open the web app as the specified peer, sending the resulting the message as the specified peer. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function requestWebView(array $peer, array $bot, string $platform, array $from_bot_menu = [], array $silent = [], string $url = '', string $start_param = '', array $theme_params = [], int $reply_to_msg_id = 0, int $top_msg_id = 0, array $send_as = []);

    /**
     * Indicate to the server (from the user side) that the user is still using a web app.
     *
     * @param array $peer Dialog where the web app was opened. @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $bot Bot that owns the [web app](https://core.telegram.org/api/bots/webapps) @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $query_id Web app interaction ID obtained from [messages.requestWebView](https://docs.madelineproto.xyz/API_docs/methods/messages.requestWebView.html)
     * @param array $silent Whether the inline message that will be sent by the bot on behalf of the user once the web app interaction is [terminated](https://docs.madelineproto.xyz/API_docs/methods/messages.sendWebViewResultMessage.html) should be sent silently (no notifications for the receivers). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $reply_to_msg_id Whether the inline message that will be sent by the bot on behalf of the user once the web app interaction is [terminated](https://docs.madelineproto.xyz/API_docs/methods/messages.sendWebViewResultMessage.html) should be sent in reply to this message ID.
     * @param int $top_msg_id 
     * @param array $send_as Open the web app as the specified peer @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function prolongWebView(array $peer, array $bot, int $query_id, array $silent = [], int $reply_to_msg_id = 0, int $top_msg_id = 0, array $send_as = []);

    /**
     * Open a [bot web app](https://core.telegram.org/api/bots/webapps).
     *
     * @param array $bot Bot that owns the webapp @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $url Web app URL
     * @param string $platform 
     * @param array $theme_params Theme parameters @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function requestSimpleWebView(array $bot, string $url, string $platform, array $theme_params = []);

    /**
     * Terminate webview interaction started with [messages.requestWebView](https://docs.madelineproto.xyz/API_docs/methods/messages.requestWebView.html), sending the specified message to the chat on behalf of the user.
     *
     * @param string $bot_query_id Webview interaction ID obtained from [messages.requestWebView](https://docs.madelineproto.xyz/API_docs/methods/messages.requestWebView.html)
     * @param array $result Message to send @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function sendWebViewResultMessage(string $bot_query_id, array $result);

    /**
     * Used by the user to relay data from an opened [reply keyboard bot web app](https://core.telegram.org/api/bots/webapps) to the bot that owns it.
     *
     * @param array $bot Bot that owns the web app @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param string $button_text Text of the [keyboardButtonSimpleWebView](https://docs.madelineproto.xyz/API_docs/constructors/keyboardButtonSimpleWebView.html) that was pressed to open the web app.
     * @param string $data Data to relay to the bot, obtained from a [`web_app_data_send` JS event](https://core.telegram.org/api/web-events#web-app-data-send).
     * 
     *
     * @return array
     */
    public function sendWebViewData(array $bot, string $button_text, string $data);

    /**
     * [Transcribe voice message](https://core.telegram.org/api/transcribe)
     *
     * @param array $peer Peer ID where the voice message was sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id Voice message ID
     * 
     *
     * @return array
     */
    public function transcribeAudio(array $peer, int $msg_id);

    /**
     * Rate [transcribed voice message](https://core.telegram.org/api/transcribe)
     *
     * @param array $peer Peer where the voice message was sent @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $msg_id Message ID
     * @param int $transcription_id Transcription ID
     * @param bool $good Whether the transcription was correct
     * 
     *
     * @return array
     */
    public function rateTranscribedAudio(array $peer, int $msg_id, int $transcription_id, bool $good);

    /**
     * Fetch [custom emoji stickers »](https://core.telegram.org/api/custom-emoji).
     * 
     * Returns a list of [documents](https://docs.madelineproto.xyz/API_docs/constructors/document.html) with the animated custom emoji in TGS format, and a [documentAttributeCustomEmoji](https://docs.madelineproto.xyz/API_docs/constructors/documentAttributeCustomEmoji.html) attribute with the original emoji and info about the emoji stickerset this custom emoji belongs to.
     *
     * @param array $document_id [Custom emoji](https://core.telegram.org/api/custom-emoji) IDs from a [messageEntityCustomEmoji](https://docs.madelineproto.xyz/API_docs/constructors/messageEntityCustomEmoji.html). @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getCustomEmojiDocuments(array $document_id);

    /**
     * Gets the list of currently installed [custom emoji stickersets](https://core.telegram.org/api/custom-emoji).
     *
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getEmojiStickers(array $hash = []);

    /**
     * Gets featured custom emoji stickersets.
     *
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getFeaturedEmojiStickers(array $hash = []);

    /**
     * 
     *
     * @param array $peer  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param int $id 
     * @param array $reaction_peer  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function reportReaction(array $peer, int $id, array $reaction_peer);

    /**
     * 
     *
     * @param int $limit 
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getTopReactions(int $limit, array $hash = []);

    /**
     * 
     *
     * @param int $limit 
     * @param array $hash  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getRecentReactions(int $limit, array $hash = []);

    /**
     * 
     *
     * @return array
     */
    public function clearRecentReactions();

    /**
     * 
     *
     * @param array $peer  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * @param array $id  @see https://docs.madelineproto.xyz/API_docs/types/array.html
     * 
     *
     * @return array
     */
    public function getExtendedMedia(array $peer, array $id);

    /**
     * 
     *
     * @param int $period 
     * 
     *
     * @return array
     */
    public function setDefaultHistoryTTL(int $period);

    /**
     * 
     *
     * @return array
     */
    public function getDefaultHistoryTTL();
}
